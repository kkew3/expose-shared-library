name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    tags:
      - '[0-9]*'

jobs:
  ci:
    name: CI for ${{ matrix.lang }} @ ${{ matrix.job.os }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        lang:
          - py
          - lua
        job:
          - { os: ubuntu-22.04, target: x86_64-unknown-linux-gnu }
          - { os: macos-14, target: aarch64-apple-darwin }
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        if: matrix.lang == 'py'
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Setup lua
        if: matrix.lang == 'lua'
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: '5.1.5'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          # As of 2025-02-17, the latest rustc version >1.77.2, which means
          # Windows 7 is not supported. To support Windows 7, we will need to
          # downgrade mlua's version in the lua example. However, for
          # illustrative purpose, we will keep the latest version here.
          targets: ${{ matrix.job.target }}
      - uses: Swatinem/rust-cache@v2

      - name: Show version information
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V
          case ${{ matrix.lang }} in
            py)
              python3 -V
              ;;
            lua)
              lua -v
              ;;
          esac

      - name: Build and check (without '--target')
        shell: bash
        run: |
          case ${{ matrix.lang }} in
            py)
              cd examples/mixed-rust-python-project
              find python -type f -name '*.so' -o -name '*.dll' -o -name '*.pyd' -exec rm -f {} +
              cargo clean
              cargo build --release
              cd python
              python3 main.py
              ;;
            lua)
              cd examples/mixed-rust-lua-project
              find lua -type f -name '*.so' -o -name '*.dll' -exec rm -f {} +
              cargo clean
              cargo build --release
              cd lua
              lua main.lua
              ;;
          esac
      - name: Build and check (with '--target')
        shell: bash
        run: |
          case ${{ matrix.lang }} in
            py)
              cd examples/mixed-rust-python-project
              find python -type f -name '*.so' -o -name '*.dll' -o -name '*.pyd' -exec rm -f {} +
              cargo clean
              cargo build --release --target=${{ matrix.job.target }}
              cd python
              python3 main.py
              ;;
            lua)
              cd examples/mixed-rust-lua-project
              find lua -type f -name '*.so' -o -name '*.dll' -exec rm -f {} +
              cargo clean
              cargo build --release --target=${{ matrix.job.target }}
              cd lua
              lua main.lua
              ;;
          esac

  ci_windows:
    name: CI for ${{ matrix.lang }} @ windows
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        lang:
          - py
          - lua
        job:
          - { os: windows-2022, target: x86_64-pc-windows-msvc }
    steps:
      - uses: actions/checkout@v4

      - name: Setup msys2 and install dependencies
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            mingw-w64-x86_64-lua51
            mingw-w64-x86_64-python
            mingw-w64-x86_64-pkg-config

      - name: Setup rust
        shell: msys2 {0}
        run: |
          curl -fSLO https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-gnu/rustup-init.exe
          ./rustup-init.exe -y --default-toolchain stable --no-modify-path --verbose
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Show version information
        shell: msys2 {0}
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V
          case ${{ matrix.lang }} in
            py)
              python3 -V
              ;;
            lua)
              lua5.1 -v
              ;;
          esac

      - name: Build and check (without '--target')
        shell: msys2 {0}
        run: |
          case ${{ matrix.lang }} in
            py)
              cd examples/mixed-rust-python-project
              find python -type f -name '*.so' -o -name '*.dll' -o -name '*.pyd' -exec rm -f {} +
              cargo clean
              cargo build --release
              cd python
              python3 main.py
              ;;
            lua)
              cd examples/mixed-rust-lua-project
              find lua -type f -name '*.so' -o -name '*.dll' -exec rm -f {} +
              cargo clean
              cargo build --release
              cd lua
              lua5.1 main.lua
              ;;
          esac
      - name: Build and check (with '--target')
        shell: msys2 {0}
        run: |
          case ${{ matrix.lang }} in
            py)
              cd examples/mixed-rust-python-project
              find python -type f -name '*.so' -o -name '*.dll' -o -name '*.pyd' -exec rm -f {} +
              cargo clean
              cargo build --release --target=${{ matrix.job.target }}
              cd python
              python3 main.py
              ;;
            lua)
              cd examples/mixed-rust-lua-project
              find lua -type f -name '*.so' -o -name '*.dll' -exec rm -f {} +
              cargo clean
              cargo build --release --target=${{ matrix.job.target }}
              cd lua
              lua5.1 main.lua
              ;;
          esac
